@page "/books/delete/{id}"
@attribute [Authorize(Roles = "Administrator")]
@inject IBookRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<h3 class="card-title">Are you sure you want to delete this record ?</h3>
<hr />
<br />

@if (Model == null)
{
    <LoadingMessage Message="Loading Book Details..." />
}
else
{

    <div class="col-6">
        <table class="table table-responsive">
            <tr>
                <td>
                    <strong>Title</strong>
                </td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td>
                    <strong>Author</strong>
                </td>
                <td>
                    @if (Model.Author == null)
                    {
                        <span class="text-muted">No Author recorded</span>
                    }
                    else
                    {
                        <a href="/authors/view/@Model.Author.Id">
                            @Model.Author.Firstname @Model.Author.Lastname
                        </a>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <strong>Summary</strong>
                </td>
                <td>@Model.Summary</td>
            </tr>
            <tr>
                <td>
                    <strong>Published Year</strong>
                </td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td>
                    <strong>ISBN</strong>
                </td>
                <td>@Model.Isbn</td>
            </tr>
        </table>
    </div>
    <div class="col-4">
        <img src="uploads/@Model.Image"
             style="height:300px; width:300px" />
        <h3 class="text-center text-info">@string.Format("{0:C}", Model.Price)</h3>
    </div>

}

<button class="btn btn-danger" @onclick="DeleteBook">
    <span class="oi oi-delete"></span>
    Delete Book
</button>
<button class="btn btn-outline-secondary" @onclick="BackToList">
    <span class="oi oi-media-skip-backward"></span>
    Back to List
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private Book Model = new Book();

    //private bool isFailed = false;

    protected override async Task OnInitializedAsync()
    {
        int id = int.Parse(Id);
        Model = await _repo.Get(Endpoints.BooksEndpoint, id);

    }

    private async Task DeleteBook()
    {
        bool isSuccess = await _repo.Delete(Endpoints.BooksEndpoint, Model.Id);
        if (isSuccess)
        {
            _toastService.ShowSuccess("Book deleted successfully.", "");
            BackToList();
        }
        else
        {
            _toastService.ShowError("An error has occurred trying to delete the Book.", "");
            //isFailed = true;
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/books/");
    }

}
